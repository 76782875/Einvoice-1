package com.park.eih5.service.impl;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import com.park.eih5.dao.OrderInvoiceDao;
import com.park.eih5.service.OrderInvoiceService;
import com.park.einvoice.common.DataChangeTools;
import com.park.einvoice.common.ResultTools;
import com.park.einvoice.common.constants.CodeConstants;

@Repository(value="orderInvoiceServiceImpl")
public class OrderInvoiceServiceImpl implements OrderInvoiceService {
	
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Resource(name="orderInvoiceDao")
	private OrderInvoiceDao orderInvoiceDao;

	@Override
	public String getOrderInvoiceStatus(String requestStr) {
		try {
			//从请求中获取主订单号
			Map<String, String> requestMap = DataChangeTools.json2Map(requestStr);
			String tradeNo = requestMap.get("tradeNo");
			logger.info("** 获取订单发票信息请求的主订单号：" + tradeNo);
			//根据主订单号获取需要返回的数据
			Map<String, String> resultMap = new HashMap<String, String>();
			resultMap = orderInvoiceDao.selectOrderInvoiceInfo(tradeNo);
			BigDecimal costAfter = new BigDecimal(resultMap.get("costAfter"));
			BigDecimal hasInvoice = new BigDecimal(resultMap.get("hasInvoice"));
			resultMap.put("noInvoice", costAfter.subtract(hasInvoice).toString());
			System.out.println(resultMap.get("plateNumber"));
			//返回数据
			return ResultTools.setObjectResponse(CodeConstants.成功.getCode(), resultMap);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("** 获取订单发票信息异常：" + e.getMessage());
			return ResultTools.setResponse(CodeConstants.服务器异常.getCode());
		}
	}
	
}
